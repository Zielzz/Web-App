// Simplified KostHub Database Schema - Multi Platform Support
// Copy paste ke dbdiagram.io untuk visualisasi

// ========== CORE TABLES ==========

// Tabel Users
Table users {
  id int [pk, increment]
  name varchar(255) [not null]
  email varchar(255) [unique, not null]
  phone varchar(20) [unique]
  password varchar(255) [not null]
  role enum('customer', 'owner', 'admin') [default: 'customer']
  avatar varchar(255)
  address text
  city varchar(100)
  email_verified_at timestamp
  phone_verified_at timestamp
  last_login timestamp
  last_platform enum('web', 'mobile', 'admin') // Track last used platform
  status enum('active', 'inactive', 'suspended') [default: 'active']
  created_at timestamp [default: `now()`]
  updated_at timestamp
}

// Session management untuk multi-platform
Table user_sessions {
  id int [pk, increment]
  user_id int [ref: > users.id, not null]
  session_token varchar(255) [unique, not null]
  platform enum('web', 'mobile', 'admin') [not null]
  device_info text // JSON: device info for mobile
  ip_address varchar(45)
  is_active boolean [default: true]
  expires_at timestamp [not null]
  created_at timestamp [default: `now()`]
  
  Indexes {
    user_id
    session_token
    (user_id, platform)
  }
}

// Device tokens untuk mobile push notifications
Table device_tokens {
  id int [pk, increment]
  user_id int [ref: > users.id, not null]
  token varchar(500) [unique, not null] // FCM token
  platform enum('android', 'ios') [not null]
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  
  Indexes {
    user_id
    token
  }
}

// Tabel Kost
Table kost {
  id int [pk, increment]
  owner_id int [ref: > users.id, not null]
  slug varchar(255) [unique, not null] // For SEO
  name varchar(255) [not null]
  description text
  address text [not null]
  city varchar(100) [not null]
  district varchar(100)
  type enum('putra', 'putri', 'campur') [not null]
  price_start decimal(10, 2) [not null]
  price_end decimal(10, 2) [not null]
  deposit decimal(10, 2) [default: 0]
  total_rooms int [not null]
  available_rooms int [not null]
  min_stay int [default: 1] // months
  rules text
  status enum('active', 'inactive', 'pending') [default: 'pending']
  is_featured boolean [default: false] // For premium listings
  rating decimal(3, 2) [default: 0]
  total_reviews int [default: 0]
  created_at timestamp [default: `now()`]
  updated_at timestamp
}

// Tabel Rooms
Table rooms {
  id int [pk, increment]
  kost_id int [ref: > kost.id, not null]
  room_number varchar(50) [not null]
  size decimal(5, 2)
  price decimal(10, 2) [not null]
  description text
  status enum('available', 'occupied', 'maintenance') [default: 'available']
  created_at timestamp [default: `now()`]
  updated_at timestamp
}

// ========== FACILITIES ==========

Table facilities {
  id int [pk, increment]
  name varchar(255) [not null]
  icon varchar(255)
  category enum('room', 'shared', 'building') [not null]
  created_at timestamp [default: `now()`]
}

Table kost_facilities {
  id int [pk, increment]
  kost_id int [ref: > kost.id]
  facility_id int [ref: > facilities.id]
}

// ========== MEDIA ==========

Table photos {
  id int [pk, increment]
  kost_id int [ref: > kost.id]
  room_id int [ref: > rooms.id] // NULL for general kost photos
  filename varchar(255) [not null]
  path varchar(500) [not null]
  is_primary boolean [default: false]
  order_num int [default: 0]
  created_at timestamp [default: `now()`]
}

// ========== BOOKINGS & PAYMENTS ==========

Table bookings {
  id int [pk, increment]
  booking_code varchar(20) [unique, not null] // KH-20241201-001
  user_id int [ref: > users.id, not null]
  kost_id int [ref: > kost.id, not null]
  room_id int [ref: > rooms.id, not null]
  check_in_date date [not null]
  duration_months int [not null]
  monthly_price decimal(10, 2) [not null]
  deposit_amount decimal(10, 2) [not null]
  total_amount decimal(10, 2) [not null]
  status enum('pending', 'confirmed', 'cancelled', 'completed') [default: 'pending']
  payment_status enum('unpaid', 'paid', 'refunded') [default: 'unpaid']
  notes text
  created_at timestamp [default: `now()`]
  updated_at timestamp
}

Table payments {
  id int [pk, increment]
  booking_id int [ref: > bookings.id, not null]
  amount decimal(10, 2) [not null]
  payment_method enum('transfer', 'ewallet', 'cash') [not null]
  payment_date timestamp
  payment_proof varchar(500) // Image path
  status enum('pending', 'success', 'failed') [default: 'pending']
  confirmed_by int [ref: > users.id] // Admin who confirmed
  notes text
  created_at timestamp [default: `now()`]
  updated_at timestamp
}

// ========== REVIEWS ==========

Table reviews {
  id int [pk, increment]
  kost_id int [ref: > kost.id, not null]
  user_id int [ref: > users.id, not null]
  booking_id int [ref: > bookings.id]
  rating int [not null] // 1-5
  title varchar(255)
  comment text
  cleanliness_rating int // 1-5
  location_rating int // 1-5
  facilities_rating int // 1-5
  value_rating int // 1-5
  status enum('pending', 'approved', 'rejected') [default: 'pending']
  created_at timestamp [default: `now()`]
  updated_at timestamp
}

// ========== USER INTERACTIONS ==========

Table favorites {
  id int [pk, increment]
  user_id int [ref: > users.id, not null]
  kost_id int [ref: > kost.id, not null]
  created_at timestamp [default: `now()`]
  
  Indexes {
    (user_id, kost_id) [unique]
  }
}

Table messages {
  id int [pk, increment]
  sender_id int [ref: > users.id, not null]
  receiver_id int [ref: > users.id, not null]
  kost_id int [ref: > kost.id] // Context
  message text [not null]
  is_read boolean [default: false]
  created_at timestamp [default: `now()`]
}

// ========== NOTIFICATIONS ==========

Table notifications {
  id int [pk, increment]
  user_id int [ref: > users.id, not null]
  title varchar(255) [not null]
  message text [not null]
  type enum('booking', 'payment', 'review', 'system') [not null]
  related_id int // booking_id, payment_id, etc
  is_read boolean [default: false]
  created_at timestamp [default: `now()`]
}

// Push notifications untuk mobile
Table push_notifications {
  id int [pk, increment]
  user_id int [ref: > users.id, not null]
  title varchar(255) [not null]
  body text [not null]
  data text // JSON payload
  platform enum('android', 'ios', 'both') [default: 'both']
  status enum('pending', 'sent', 'failed') [default: 'pending']
  sent_at timestamp
  created_at timestamp [default: `now()`]
}

// ========== ADMIN FEATURES ==========

// Simple admin roles
Table admin_roles {
  id int [pk, increment]
  user_id int [ref: > users.id, not null]
  permissions text [not null] // JSON array: ['manage_users', 'approve_kost', etc]
  created_at timestamp [default: `now()`]
}

// Admin activity tracking
Table admin_logs {
  id int [pk, increment]
  admin_id int [ref: > users.id, not null]
  action varchar(100) [not null] // approve_kost, ban_user, etc
  resource_type varchar(50) [not null] // kost, user, booking
  resource_id int
  details text // JSON
  created_at timestamp [default: `now()`]
}

// ========== SYSTEM ==========

// Simple CMS untuk banner homepage
Table banners {
  id int [pk, increment]
  title varchar(255) [not null]
  image_url varchar(500) [not null]
  mobile_image_url varchar(500) // Different for mobile
  action_url varchar(500)
  platform enum('all', 'web', 'mobile') [default: 'all']
  is_active boolean [default: true]
  order_num int [default: 0]
  created_at timestamp [default: `now()`]
}

// System settings
Table settings {
  id int [pk, increment]
  key varchar(255) [unique, not null]
  value text
  description text
  updated_at timestamp [default: `now()`]
}

// Search analytics (simplified)
Table search_logs {
  id int [pk, increment]
  user_id int [ref: > users.id] // NULL for guest
  search_query varchar(255)
  city varchar(100)
  type enum('putra', 'putri', 'campur')
  results_count int
  platform enum('web', 'mobile', 'admin')
  created_at timestamp [default: `now()`]
}

